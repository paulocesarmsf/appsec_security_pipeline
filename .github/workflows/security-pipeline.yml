name: Application Security Pipeline

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: "Git repository URL (e.g., https://github.com/netbox-community/netbox)"
        required: true
        default: "https://github.com/netbox-community/netbox"
      target_ref:
        description: "Branch/Tag/Commit of the target application (e.g., main)"
        required: false
        default: "main"
  # push:
  #   branches: []

jobs:
  clone:
    name: Clone target repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (this delivery repo)
        uses: actions/checkout@v4

      - name: Clone target application (public repo only)
        run: |
          TARGET_REPO="${{ github.event.inputs.target_repo || 'https://github.com/netbox-community/netbox' }}"
          TARGET_REF="${{ github.event.inputs.target_ref  || 'main' }}"
          APP_DIR="${GITHUB_WORKSPACE}/target-app"

          echo "Cloning ${TARGET_REPO} (ref: ${TARGET_REF}) into ${APP_DIR} ..."
          git clone --depth 1 --branch "${TARGET_REF}" "${TARGET_REPO}" "${APP_DIR}"

          echo "Clone completed. Top-level files:"
          ls -la "${APP_DIR}"

      - name: Upload target app as artifact
        uses: actions/upload-artifact@v4
        with:
          name: target-app
          path: target-app/
          retention-days: 7 

  sast:
    name: Static Analysis — SAST (Semgrep)
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout (this delivery repo)
        uses: actions/checkout@v4

      - name: Download target app artifact
        uses: actions/download-artifact@v4
        with:
          name: target-app
          path: ./target-app

      - name: Set up Python (for Semgrep install)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Semgrep
        run: python -m pip install --upgrade pip && pip install semgrep

      - name: Run Semgrep (security-audit ruleset)
        working-directory: ./target-app
        run: |
          mkdir -p "$GITHUB_WORKSPACE/SAST"
          semgrep --config p/security-audit --metrics=off --timeout 180 --exclude node_modules --exclude venv --exclude .venv \
          --json > "$GITHUB_WORKSPACE/SAST/semgrep-report.json" || true

      - name: Upload SAST artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SAST-semgrep
          path: |
            SAST/semgrep-report.json

  sca:
    name: Static Analysis — SCA (OSV-Scanner)
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Checkout (this delivery repo)
        uses: actions/checkout@v4

      - name: Download target app artifact
        uses: actions/download-artifact@v4
        with:
          name: target-app
          path: ./target-app

      - name: Install OSV-Scanner
        run: |
          curl -L https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64 -o /usr/local/bin/osv-scanner
          chmod +x /usr/local/bin/osv-scanner

      - name: Run OSV-Scanner on repo
        working-directory: ./target-app
        run: |
          mkdir -p "$GITHUB_WORKSPACE/SCA"
          osv-scanner scan . --format json > "$GITHUB_WORKSPACE/SCA/osv-scanner-repo.json" || true

      - name: Upload SCA artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SCA-osv-scanner
          path: SCA/*
