{"version":"1.131.0","results":[{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/docs/_templates/layout.html","start":{"line":54,"col":14,"offset":2303},"end":{"line":54,"col":45,"offset":2334},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/docs/_templates/layout.html","start":{"line":118,"col":24,"offset":4564},"end":{"line":118,"col":77,"offset":4617},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/docs/_templates/relations.html","start":{"line":5,"col":10,"offset":130},"end":{"line":5,"col":41,"offset":161},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/docs/_templates/relations.html","start":{"line":7,"col":10,"offset":233},"end":{"line":7,"col":36,"offset":259},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/docs/_templates/relations.html","start":{"line":10,"col":24,"offset":345},"end":{"line":10,"col":48,"offset":369},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/docs/_templates/relations.html","start":{"line":14,"col":20,"offset":495},"end":{"line":14,"col":44,"offset":519},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"target-app/flaskbb/cli/main.py","start":{"line":382,"col":13,"offset":11291},"end":{"line":382,"col":58,"offset":11336},"extra":{"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.unescaped-template-extension.unescaped-template-extension","path":"target-app/flaskbb/email.py","start":{"line":34,"col":19,"offset":818},"end":{"line":36,"col":10,"offset":915},"extra":{"message":"Flask does not automatically escape Jinja templates unless they have .html, .htm, .xml, or .xhtml extensions. This could lead to XSS attacks. Use .html, .htm, .xml, or .xhtml for your template extensions. See https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup for more information.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"source-rule-url":"https://pypi.org/project/flake8-flask/","references":["https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup","https://semgrep.dev/blog/2020/bento-check-unescaped-template-extensions-in-flask/","https://bento.dev/checks/flask/unescaped-file-extension/"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.unescaped-template-extension.unescaped-template-extension","shortlink":"https://sg.run/x1Rg"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.unescaped-template-extension.unescaped-template-extension","path":"target-app/flaskbb/email.py","start":{"line":54,"col":19,"offset":1447},"end":{"line":56,"col":10,"offset":1546},"extra":{"message":"Flask does not automatically escape Jinja templates unless they have .html, .htm, .xml, or .xhtml extensions. This could lead to XSS attacks. Use .html, .htm, .xml, or .xhtml for your template extensions. See https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup for more information.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"source-rule-url":"https://pypi.org/project/flake8-flask/","references":["https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup","https://semgrep.dev/blog/2020/bento-check-unescaped-template-extensions-in-flask/","https://bento.dev/checks/flask/unescaped-file-extension/"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.unescaped-template-extension.unescaped-template-extension","shortlink":"https://sg.run/x1Rg"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe","path":"target-app/flaskbb/templates/_macros/form.html","start":{"line":12,"col":32,"offset":474},"end":{"line":12,"col":60,"offset":502},"extra":{"message":"Detected a segment of a Flask template where autoescaping is explicitly disabled with '| safe' filter. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe","shortlink":"https://sg.run/W8og"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe","path":"target-app/flaskbb/templates/_macros/navigation.html","start":{"line":23,"col":5,"offset":728},"end":{"line":23,"col":20,"offset":743},"extra":{"message":"Detected a segment of a Flask template where autoescaping is explicitly disabled with '| safe' filter. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe","shortlink":"https://sg.run/W8og"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/navigation.html","start":{"line":40,"col":25,"offset":1255},"end":{"line":40,"col":39,"offset":1269},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/pagination.html","start":{"line":9,"col":60,"offset":636},"end":{"line":9,"col":105,"offset":681},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/pagination.html","start":{"line":18,"col":52,"offset":1059},"end":{"line":18,"col":110,"offset":1117},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/pagination.html","start":{"line":29,"col":60,"offset":1541},"end":{"line":29,"col":92,"offset":1573},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/pagination.html","start":{"line":38,"col":52,"offset":1955},"end":{"line":38,"col":97,"offset":2000},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/pagination.html","start":{"line":49,"col":24,"offset":2329},"end":{"line":49,"col":56,"offset":2361},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/_macros/pagination.html","start":{"line":58,"col":16,"offset":2647},"end":{"line":58,"col":61,"offset":2692},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/email/activate_account.html","start":{"line":7,"col":7,"offset":224},"end":{"line":7,"col":24,"offset":241},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/email/reset_password.html","start":{"line":6,"col":7,"offset":215},"end":{"line":6,"col":24,"offset":232},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/_forum_row.html","start":{"line":25,"col":16,"offset":1052},"end":{"line":25,"col":84,"offset":1120},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/_forum_row.html","start":{"line":33,"col":17,"offset":1427},"end":{"line":33,"col":44,"offset":1454},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/_forum_row.html","start":{"line":55,"col":12,"offset":2091},"end":{"line":55,"col":38,"offset":2117},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/_forum_row.html","start":{"line":60,"col":16,"offset":2298},"end":{"line":60,"col":47,"offset":2329},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/category_layout.html","start":{"line":3,"col":12,"offset":90},"end":{"line":3,"col":37,"offset":115},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/category_layout.html","start":{"line":25,"col":90,"offset":1234},"end":{"line":25,"col":112,"offset":1256},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/category_layout.html","start":{"line":63,"col":24,"offset":2659},"end":{"line":63,"col":46,"offset":2681},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/category_layout.html","start":{"line":96,"col":24,"offset":3971},"end":{"line":96,"col":56,"offset":4003},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/edit_forum.html","start":{"line":14,"col":44,"offset":617},"end":{"line":14,"col":75,"offset":648},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/edit_forum.html","start":{"line":26,"col":20,"offset":1082},"end":{"line":26,"col":42,"offset":1104},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/edit_forum.html","start":{"line":47,"col":49,"offset":1925},"end":{"line":47,"col":71,"offset":1947},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var","path":"target-app/flaskbb/templates/forum/edit_forum.html","start":{"line":97,"col":39,"offset":4393},"end":{"line":97,"col":51,"offset":4405},"extra":{"message":"Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: \"{{ expr }}\".","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var","shortlink":"https://sg.run/weNX"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/forum.html","start":{"line":11,"col":40,"offset":441},"end":{"line":11,"col":71,"offset":472},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/forum.html","start":{"line":44,"col":16,"offset":1846},"end":{"line":44,"col":38,"offset":1868},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/index.html","start":{"line":22,"col":118,"offset":1277},"end":{"line":22,"col":146,"offset":1305},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/memberlist.html","start":{"line":53,"col":57,"offset":2702},"end":{"line":53,"col":78,"offset":2723},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/new_post.html","start":{"line":18,"col":40,"offset":569},"end":{"line":18,"col":68,"offset":597},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/new_post.html","start":{"line":19,"col":40,"offset":670},"end":{"line":19,"col":62,"offset":692},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/new_topic.html","start":{"line":18,"col":40,"offset":550},"end":{"line":18,"col":62,"offset":572},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":26,"col":53,"offset":1036},"end":{"line":26,"col":79,"offset":1062},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":49,"col":53,"offset":2418},"end":{"line":49,"col":79,"offset":2444},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":60,"col":32,"offset":2894},"end":{"line":60,"col":53,"offset":2915},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":65,"col":201,"offset":3331},"end":{"line":65,"col":222,"offset":3352},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":107,"col":57,"offset":5260},"end":{"line":107,"col":78,"offset":5281},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":151,"col":36,"offset":7492},"end":{"line":151,"col":58,"offset":7514},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":159,"col":37,"offset":7961},"end":{"line":159,"col":64,"offset":7988},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":176,"col":24,"offset":8653},"end":{"line":176,"col":56,"offset":8685},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":181,"col":28,"offset":8926},"end":{"line":181,"col":65,"offset":8963},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":227,"col":102,"offset":11039},"end":{"line":227,"col":124,"offset":11061},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":267,"col":36,"offset":12686},"end":{"line":267,"col":58,"offset":12708},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/search_result.html","start":{"line":302,"col":28,"offset":14280},"end":{"line":302,"col":60,"offset":14312},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic.html","start":{"line":12,"col":40,"offset":600},"end":{"line":12,"col":77,"offset":637},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic.html","start":{"line":13,"col":40,"offset":719},"end":{"line":13,"col":68,"offset":747},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic.html","start":{"line":29,"col":16,"offset":1278},"end":{"line":29,"col":38,"offset":1300},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic.html","start":{"line":38,"col":53,"offset":1689},"end":{"line":38,"col":74,"offset":1710},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic.html","start":{"line":101,"col":32,"offset":5244},"end":{"line":101,"col":53,"offset":5265},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic.html","start":{"line":106,"col":201,"offset":5681},"end":{"line":106,"col":222,"offset":5702},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic_horizontal.html","start":{"line":11,"col":40,"offset":494},"end":{"line":11,"col":77,"offset":531},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic_horizontal.html","start":{"line":12,"col":40,"offset":613},"end":{"line":12,"col":68,"offset":641},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic_horizontal.html","start":{"line":27,"col":16,"offset":1170},"end":{"line":27,"col":38,"offset":1192},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic_horizontal.html","start":{"line":43,"col":61,"offset":1961},"end":{"line":43,"col":82,"offset":1982},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic_horizontal.html","start":{"line":71,"col":32,"offset":3601},"end":{"line":71,"col":53,"offset":3622},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topic_horizontal.html","start":{"line":76,"col":201,"offset":4038},"end":{"line":76,"col":222,"offset":4059},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topictracker.html","start":{"line":62,"col":32,"offset":3233},"end":{"line":62,"col":54,"offset":3255},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topictracker.html","start":{"line":70,"col":33,"offset":3674},"end":{"line":70,"col":60,"offset":3701},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topictracker.html","start":{"line":87,"col":28,"offset":4303},"end":{"line":87,"col":54,"offset":4329},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/forum/topictracker.html","start":{"line":92,"col":32,"offset":4574},"end":{"line":92,"col":63,"offset":4605},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe","path":"target-app/flaskbb/templates/layout.html","start":{"line":199,"col":60,"offset":9561},"end":{"line":199,"col":108,"offset":9609},"extra":{"message":"Detected a segment of a Flask template where autoescaping is explicitly disabled with '| safe' filter. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe","shortlink":"https://sg.run/W8og"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-script-tag.var-in-script-tag","path":"target-app/flaskbb/templates/layout.html","start":{"line":221,"col":35,"offset":10450},"end":{"line":221,"col":67,"offset":10482},"extra":{"message":"Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://adamj.eu/tech/2020/02/18/safely-including-data-for-javascript-in-a-django-template/?utm_campaign=Django%2BNewsletter&utm_medium=rss&utm_source=Django_Newsletter_12A","https://www.veracode.com/blog/secure-development/nodejs-template-engines-why-default-encoders-are-not-enough","https://github.com/ESAPI/owasp-esapi-js"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-script-tag.var-in-script-tag","shortlink":"https://sg.run/eLWE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/banned_users.html","start":{"line":85,"col":61,"offset":4449},"end":{"line":85,"col":82,"offset":4470},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/forums.html","start":{"line":40,"col":36,"offset":1667},"end":{"line":40,"col":61,"offset":1692},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/forums.html","start":{"line":85,"col":114,"offset":4432},"end":{"line":85,"col":136,"offset":4454},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/forums.html","start":{"line":134,"col":40,"offset":7012},"end":{"line":134,"col":62,"offset":7034},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/overview.html","start":{"line":26,"col":100,"offset":1206},"end":{"line":26,"col":116,"offset":1222},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-script-tag.var-in-script-tag","path":"target-app/flaskbb/templates/management/overview.html","start":{"line":171,"col":31,"offset":9281},"end":{"line":171,"col":70,"offset":9320},"extra":{"message":"Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://adamj.eu/tech/2020/02/18/safely-including-data-for-javascript-in-a-django-template/?utm_campaign=Django%2BNewsletter&utm_medium=rss&utm_source=Django_Newsletter_12A","https://www.veracode.com/blog/secure-development/nodejs-template-engines-why-default-encoders-are-not-enough","https://github.com/ESAPI/owasp-esapi-js"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-script-tag.var-in-script-tag","shortlink":"https://sg.run/eLWE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-script-tag.var-in-script-tag","path":"target-app/flaskbb/templates/management/overview.html","start":{"line":174,"col":19,"offset":9373},"end":{"line":174,"col":60,"offset":9414},"extra":{"message":"Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://adamj.eu/tech/2020/02/18/safely-including-data-for-javascript-in-a-django-template/?utm_campaign=Django%2BNewsletter&utm_medium=rss&utm_source=Django_Newsletter_12A","https://www.veracode.com/blog/secure-development/nodejs-template-engines-why-default-encoders-are-not-enough","https://github.com/ESAPI/owasp-esapi-js"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-script-tag.var-in-script-tag","shortlink":"https://sg.run/eLWE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/plugins.html","start":{"line":37,"col":28,"offset":1785},"end":{"line":37,"col":69,"offset":1826},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/reports.html","start":{"line":69,"col":61,"offset":3924},"end":{"line":69,"col":94,"offset":3957},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/reports.html","start":{"line":70,"col":61,"offset":4060},"end":{"line":70,"col":89,"offset":4088},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/management/users.html","start":{"line":99,"col":61,"offset":5363},"end":{"line":99,"col":82,"offset":5384},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/all_posts.html","start":{"line":7,"col":36,"offset":353},"end":{"line":7,"col":57,"offset":374},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/all_posts.html","start":{"line":18,"col":16,"offset":719},"end":{"line":18,"col":37,"offset":740},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/all_topics.html","start":{"line":7,"col":36,"offset":353},"end":{"line":7,"col":57,"offset":374},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/all_topics.html","start":{"line":24,"col":28,"offset":944},"end":{"line":24,"col":50,"offset":966},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/all_topics.html","start":{"line":25,"col":29,"offset":1026},"end":{"line":25,"col":51,"offset":1048},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/profile.html","start":{"line":6,"col":43,"offset":277},"end":{"line":6,"col":64,"offset":298},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.html-templates.security.var-in-href.var-in-href","path":"target-app/flaskbb/templates/user/settings_layout.html","start":{"line":9,"col":36,"offset":403},"end":{"line":9,"col":65,"offset":432},"extra":{"message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI","https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url","https://github.com/pugjs/pug/issues/2952","https://content-security-policy.com/"],"category":"security","technology":["html-templates"],"confidence":"LOW","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/generic.html-templates.security.var-in-href.var-in-href","shortlink":"https://sg.run/x1kP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","path":"target-app/flaskbb/utils/fields.py","start":{"line":83,"col":25,"offset":2538},"end":{"line":83,"col":88,"offset":2601},"extra":{"message":"Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.","metadata":{"cwe":["CWE-939: Improper Authorization in Handler for Custom URL Scheme"],"owasp":"A01:2017 - Injection","source-rule-url":"https://github.com/PyCQA/bandit/blob/b1411bfb43795d3ffd268bef17a839dee954c2b1/bandit/blacklists/calls.py#L163","bandit-code":"B310","asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://cwe.mitre.org/data/definitions/939.html"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","shortlink":"https://sg.run/dKZZ"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line target-app/flaskbb/static/vendors.js:1:\n `/*! For license information please see vendors.js.LICENSE.txt */\n(self.webpackChunkflaskbb_theme_aurora=self.webpackChunkflaskbb_theme_aurora||[]).push([[216],{613:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Completer=void 0;const i=n(729),s=n(200);class r extends i.EventEmitter{constructor(e){super(),this.handleQueryResult=e=>{this.emit(\"hit\",{searchResults:e})},this.strategies=e.map((e=>new s.Strategy(e)))}destroy(){return this.strategies.forEach((e=>e.destroy())),this}run(e){for(const t of this.strategies)if(t.execute(e,this.handleQueryResult))return;this.handleQueryResult([])}}t.Completer=r},707:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Dropdown=t.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME=t.DEFAULT_DROPDOWN_ITEM_CLASS_NAME=t.DEFAULT_DROPDOWN_CLASS_NAME=t.DEFAULT_DROPDOWN_PLACEMENT=t.DEFAULT_DROPDOWN_MAX_COUNT=void 0;const i=n(729),s=n(320);t.DEFAULT_DROPDOWN_MAX_COUNT=10,t.DEFAULT_DROPDOWN_PLACEMENT=\"auto\",t.DEFAULT_DROPDOWN_CLASS_NAME=\"dropdown-menu textcomplete-dropdown\",t.DEFAULT_DROPDOWN_ITEM_CLASS_NAME=\"textcomplete-item\",t.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME=`${t.DEFAULT_DROPDOWN_ITEM_CLASS_NAME} active`;class r extends i.EventEmitter{constructor(e,t){super(),this.el=e,this.option=t,this.shown=!1,this.items=[],this.activeIndex=null}static create(e){const n=document.createElement(\"ul\");n.className=e.className||t.DEFAULT_DROPDOWN_CLASS_NAME,Object.assign(n.style,{display:\"none\",position:\"absolute\",zIndex:\"1000\"},e.style);const i=e.parent||document.body;return null==i||i.appendChild(n),new r(n,e)}render(e,n){const i=(0,s.createCustomEvent)(\"render\",{cancelable:!0});return this.emit(\"render\",i),i.defaultPrevented?this:(this.clear(),0===e.length?this.hide():(this.items=e.slice(0,this.option.maxCount||t.DEFAULT_DROPDOWN_MAX_COUNT).map(((e,t)=>{var n;return new o(this,t,e,(null===(n=this.option)||void 0===n?void 0:n.item)||{})})),this.setStrategyId(e[0]).renderEdge(e,\"header\").renderItems().renderEdge(e,\"footer\").show().setOffset(n).activate(0),t... (truncated 181936 more characters)","path":"target-app/flaskbb/static/vendors.js"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line target-app/flaskbb/themes/aurora/static/vendors.js:1:\n `/*! For license information please see vendors.js.LICENSE.txt */\n(self.webpackChunkflaskbb_theme_aurora=self.webpackChunkflaskbb_theme_aurora||[]).push([[216],{613:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Completer=void 0;const i=n(729),s=n(200);class r extends i.EventEmitter{constructor(e){super(),this.handleQueryResult=e=>{this.emit(\"hit\",{searchResults:e})},this.strategies=e.map((e=>new s.Strategy(e)))}destroy(){return this.strategies.forEach((e=>e.destroy())),this}run(e){for(const t of this.strategies)if(t.execute(e,this.handleQueryResult))return;this.handleQueryResult([])}}t.Completer=r},707:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Dropdown=t.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME=t.DEFAULT_DROPDOWN_ITEM_CLASS_NAME=t.DEFAULT_DROPDOWN_CLASS_NAME=t.DEFAULT_DROPDOWN_PLACEMENT=t.DEFAULT_DROPDOWN_MAX_COUNT=void 0;const i=n(729),s=n(320);t.DEFAULT_DROPDOWN_MAX_COUNT=10,t.DEFAULT_DROPDOWN_PLACEMENT=\"auto\",t.DEFAULT_DROPDOWN_CLASS_NAME=\"dropdown-menu textcomplete-dropdown\",t.DEFAULT_DROPDOWN_ITEM_CLASS_NAME=\"textcomplete-item\",t.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME=`${t.DEFAULT_DROPDOWN_ITEM_CLASS_NAME} active`;class r extends i.EventEmitter{constructor(e,t){super(),this.el=e,this.option=t,this.shown=!1,this.items=[],this.activeIndex=null}static create(e){const n=document.createElement(\"ul\");n.className=e.className||t.DEFAULT_DROPDOWN_CLASS_NAME,Object.assign(n.style,{display:\"none\",position:\"absolute\",zIndex:\"1000\"},e.style);const i=e.parent||document.body;return null==i||i.appendChild(n),new r(n,e)}render(e,n){const i=(0,s.createCustomEvent)(\"render\",{cancelable:!0});return this.emit(\"render\",i),i.defaultPrevented?this:(this.clear(),0===e.length?this.hide():(this.items=e.slice(0,this.option.maxCount||t.DEFAULT_DROPDOWN_MAX_COUNT).map(((e,t)=>{var n;return new o(this,t,e,(null===(n=this.option)||void 0===n?void 0:n.item)||{})})),this.setStrategyId(e[0]).renderEdge(e,\"header\").renderItems().renderEdge(e,\"footer\").show().setOffset(n).activate(0),t... (truncated 181936 more characters)","path":"target-app/flaskbb/themes/aurora/static/vendors.js"}],"paths":{"scanned":["target-app/AUTHORS","target-app/CHANGES","target-app/CONTRIBUTING.md","target-app/LICENSE","target-app/MANIFEST.in","target-app/Makefile","target-app/NOTICE","target-app/README.md","target-app/babel.cfg","target-app/celery_worker.py","target-app/docs/Makefile","target-app/docs/_static/custom.css","target-app/docs/_static/fa-brands-400.eot","target-app/docs/_static/fa-brands-400.svg","target-app/docs/_static/fa-brands-400.ttf","target-app/docs/_static/fa-brands-400.woff","target-app/docs/_static/fa-brands-400.woff2","target-app/docs/_static/fa-regular-400.eot","target-app/docs/_static/fa-regular-400.svg","target-app/docs/_static/fa-regular-400.ttf","target-app/docs/_static/fa-regular-400.woff","target-app/docs/_static/fa-regular-400.woff2","target-app/docs/_static/fa-solid-900.eot","target-app/docs/_static/fa-solid-900.svg","target-app/docs/_static/fa-solid-900.ttf","target-app/docs/_static/fa-solid-900.woff","target-app/docs/_static/fa-solid-900.woff2","target-app/docs/_static/favicon.ico","target-app/docs/_static/logo-full.png","target-app/docs/_static/main.css","target-app/docs/_static/main.js","target-app/docs/_templates/layout.html","target-app/docs/_templates/relations.html","target-app/docs/_templates/searchbox.html","target-app/docs/_templates/sidebarintro.html","target-app/docs/changelog.rst","target-app/docs/cli.rst","target-app/docs/conf.py","target-app/docs/contents.rst.inc","target-app/docs/development/api/accountmanagement.rst","target-app/docs/development/api/authentication.rst","target-app/docs/development/api/changesets.rst","target-app/docs/development/api/coreexceptions.rst","target-app/docs/development/api/deprecations.rst","target-app/docs/development/api/display.rst","target-app/docs/development/api/index.rst","target-app/docs/development/api/models.rst","target-app/docs/development/api/registration.rst","target-app/docs/development/api/tokens.rst","target-app/docs/development/api/userprofiles.rst","target-app/docs/development/hooks/cli.rst","target-app/docs/development/hooks/event.rst","target-app/docs/development/hooks/forms.rst","target-app/docs/development/hooks/index.rst","target-app/docs/development/hooks/startup.rst","target-app/docs/development/hooks/template.rst","target-app/docs/development/plugin/developing.rst","target-app/docs/development/plugin/hooks.rst","target-app/docs/development/plugin/index.rst","target-app/docs/development/plugin/manager.rst","target-app/docs/development/settings.rst","target-app/docs/development/theming.rst","target-app/docs/faq.rst","target-app/docs/index.rst","target-app/docs/installation.rst","target-app/docs/license.rst","target-app/docs/make.bat","target-app/docs/plugins/index.rst","target-app/docs/releases.rst","target-app/flaskbb/__init__.py","target-app/flaskbb/app.py","target-app/flaskbb/auth/__init__.py","target-app/flaskbb/auth/forms.py","target-app/flaskbb/auth/plugins.py","target-app/flaskbb/auth/services/__init__.py","target-app/flaskbb/auth/services/activation.py","target-app/flaskbb/auth/services/authentication.py","target-app/flaskbb/auth/services/factories.py","target-app/flaskbb/auth/services/password.py","target-app/flaskbb/auth/services/reauthentication.py","target-app/flaskbb/auth/services/registration.py","target-app/flaskbb/auth/views.py","target-app/flaskbb/cli/__init__.py","target-app/flaskbb/cli/main.py","target-app/flaskbb/cli/plugins.py","target-app/flaskbb/cli/themes.py","target-app/flaskbb/cli/translations.py","target-app/flaskbb/cli/users.py","target-app/flaskbb/cli/utils.py","target-app/flaskbb/configs/__init__.py","target-app/flaskbb/configs/config.cfg.template","target-app/flaskbb/configs/default.py","target-app/flaskbb/configs/testing.py","target-app/flaskbb/core/__init__.py","target-app/flaskbb/core/auth/__init__.py","target-app/flaskbb/core/auth/activation.py","target-app/flaskbb/core/auth/authentication.py","target-app/flaskbb/core/auth/password.py","target-app/flaskbb/core/auth/registration.py","target-app/flaskbb/core/changesets.py","target-app/flaskbb/core/exceptions.py","target-app/flaskbb/core/tokens.py","target-app/flaskbb/core/user/__init__.py","target-app/flaskbb/core/user/update.py","target-app/flaskbb/deprecation.py","target-app/flaskbb/display/__init__.py","target-app/flaskbb/display/navigation.py","target-app/flaskbb/email.py","target-app/flaskbb/exceptions.py","target-app/flaskbb/extensions.py","target-app/flaskbb/fixtures/__init__.py","target-app/flaskbb/fixtures/groups.py","target-app/flaskbb/fixtures/settings.py","target-app/flaskbb/forum/__init__.py","target-app/flaskbb/forum/forms.py","target-app/flaskbb/forum/locals.py","target-app/flaskbb/forum/models.py","target-app/flaskbb/forum/utils.py","target-app/flaskbb/forum/views.py","target-app/flaskbb/management/__init__.py","target-app/flaskbb/management/forms.py","target-app/flaskbb/management/models.py","target-app/flaskbb/management/plugins.py","target-app/flaskbb/management/views.py","target-app/flaskbb/markup.py","target-app/flaskbb/migrations/201501082314_8ad96e49dc6_init.py","target-app/flaskbb/migrations/201503222157_514ca0a3282c_private_messages.py","target-app/flaskbb/migrations/201504082225_127be3fb000_added_m2m_forumgroups_table.py","target-app/flaskbb/migrations/201606061345_221d918aa9f0_add_user_authentication_infos.py","target-app/flaskbb/migrations/201606210939_d9530a529b3f_add_timezone_awareness_for_datetime.py","target-app/flaskbb/migrations/201611190919_d87cea4e995d_remove_timezone_info_from_birthday_field.py","target-app/flaskbb/migrations/201705041144_933bd7d807c4_add_more_non_nullables.py","target-app/flaskbb/migrations/201706300917_881dd22cab94_add_date_modified_to_conversations.py","target-app/flaskbb/migrations/201709041519_d0ffadc3ea48_add_hidden_columns.py","target-app/flaskbb/migrations/201711180953_7c3fcf8a3335_add_plugin_tables.py","target-app/flaskbb/migrations/201802021027_af3f5579c84d_add_cascades.py","target-app/flaskbb/migrations/201802282131_232e68a03aa2_change_emoji_shortcodes_to_characters.py","target-app/flaskbb/migrations/201803012138_5945d8081a95_remove_conversations.py","target-app/flaskbb/migrations/__init__.py","target-app/flaskbb/migrations/script.py.mako","target-app/flaskbb/plugins/__init__.py","target-app/flaskbb/plugins/manager.py","target-app/flaskbb/plugins/models.py","target-app/flaskbb/plugins/spec.py","target-app/flaskbb/plugins/utils.py","target-app/flaskbb/static/app.css","target-app/flaskbb/static/app.css.map","target-app/flaskbb/static/app.js","target-app/flaskbb/static/app.js.map","target-app/flaskbb/static/avatar.svg","target-app/flaskbb/static/avatar100x100.png","target-app/flaskbb/static/avatar150x150.png","target-app/flaskbb/static/avatar400x400.png","target-app/flaskbb/static/avatar80x80.png","target-app/flaskbb/static/fa-regular-400.eot","target-app/flaskbb/static/fa-regular-400.svg","target-app/flaskbb/static/fa-regular-400.ttf","target-app/flaskbb/static/fa-regular-400.woff","target-app/flaskbb/static/fa-regular-400.woff2","target-app/flaskbb/static/fa-solid-900.eot","target-app/flaskbb/static/fa-solid-900.svg","target-app/flaskbb/static/fa-solid-900.ttf","target-app/flaskbb/static/fa-solid-900.woff","target-app/flaskbb/static/fa-solid-900.woff2","target-app/flaskbb/static/favicon.ico","target-app/flaskbb/static/vendors.js","target-app/flaskbb/static/vendors.js.LICENSE.txt","target-app/flaskbb/static/vendors.js.map","target-app/flaskbb/templates/_macros/form.html","target-app/flaskbb/templates/_macros/navigation.html","target-app/flaskbb/templates/_macros/pagination.html","target-app/flaskbb/templates/_macros/utils.html","target-app/flaskbb/templates/_partials/confirm_dialog.html","target-app/flaskbb/templates/_partials/editor_help.html","target-app/flaskbb/templates/_partials/flashed_messages.html","target-app/flaskbb/templates/auth/account_activation.html","target-app/flaskbb/templates/auth/forgot_password.html","target-app/flaskbb/templates/auth/login.html","target-app/flaskbb/templates/auth/reauth.html","target-app/flaskbb/templates/auth/register.html","target-app/flaskbb/templates/auth/request_account_activation.html","target-app/flaskbb/templates/auth/reset_password.html","target-app/flaskbb/templates/email/activate_account.html","target-app/flaskbb/templates/email/activate_account.txt","target-app/flaskbb/templates/email/reset_password.html","target-app/flaskbb/templates/email/reset_password.txt","target-app/flaskbb/templates/errors/forbidden_page.html","target-app/flaskbb/templates/errors/page_not_found.html","target-app/flaskbb/templates/errors/server_error.html","target-app/flaskbb/templates/errors/too_many_logins.html","target-app/flaskbb/templates/forum/_forum_meta.html","target-app/flaskbb/templates/forum/_forum_row.html","target-app/flaskbb/templates/forum/category.html","target-app/flaskbb/templates/forum/category_layout.html","target-app/flaskbb/templates/forum/edit_forum.html","target-app/flaskbb/templates/forum/forum.html","target-app/flaskbb/templates/forum/index.html","target-app/flaskbb/templates/forum/memberlist.html","target-app/flaskbb/templates/forum/new_post.html","target-app/flaskbb/templates/forum/new_topic.html","target-app/flaskbb/templates/forum/online_users.html","target-app/flaskbb/templates/forum/report_post.html","target-app/flaskbb/templates/forum/search_form.html","target-app/flaskbb/templates/forum/search_result.html","target-app/flaskbb/templates/forum/topic.html","target-app/flaskbb/templates/forum/topic_controls.html","target-app/flaskbb/templates/forum/topic_horizontal.html","target-app/flaskbb/templates/forum/topictracker.html","target-app/flaskbb/templates/layout.html","target-app/flaskbb/templates/management/banned_users.html","target-app/flaskbb/templates/management/category_form.html","target-app/flaskbb/templates/management/forum_form.html","target-app/flaskbb/templates/management/forums.html","target-app/flaskbb/templates/management/group_form.html","target-app/flaskbb/templates/management/groups.html","target-app/flaskbb/templates/management/management_layout.html","target-app/flaskbb/templates/management/overview.html","target-app/flaskbb/templates/management/plugins.html","target-app/flaskbb/templates/management/reports.html","target-app/flaskbb/templates/management/settings.html","target-app/flaskbb/templates/management/user_form.html","target-app/flaskbb/templates/management/users.html","target-app/flaskbb/templates/user/all_posts.html","target-app/flaskbb/templates/user/all_topics.html","target-app/flaskbb/templates/user/change_email.html","target-app/flaskbb/templates/user/change_password.html","target-app/flaskbb/templates/user/change_user_details.html","target-app/flaskbb/templates/user/general_settings.html","target-app/flaskbb/templates/user/profile.html","target-app/flaskbb/templates/user/profile_layout.html","target-app/flaskbb/templates/user/settings_layout.html","target-app/flaskbb/themes/aurora/Makefile","target-app/flaskbb/themes/aurora/README.md","target-app/flaskbb/themes/aurora/build_emoji_set.py","target-app/flaskbb/themes/aurora/info.json","target-app/flaskbb/themes/aurora/package-lock.json","target-app/flaskbb/themes/aurora/package.json","target-app/flaskbb/themes/aurora/preview.png","target-app/flaskbb/themes/aurora/src/app/confirm_modal.js","target-app/flaskbb/themes/aurora/src/app/editor.js","target-app/flaskbb/themes/aurora/src/app/emoji.js","target-app/flaskbb/themes/aurora/src/app/flaskbb.js","target-app/flaskbb/themes/aurora/src/app/utils.js","target-app/flaskbb/themes/aurora/src/app.js","target-app/flaskbb/themes/aurora/src/assets/avatar.svg","target-app/flaskbb/themes/aurora/src/assets/avatar100x100.png","target-app/flaskbb/themes/aurora/src/assets/avatar150x150.png","target-app/flaskbb/themes/aurora/src/assets/avatar400x400.png","target-app/flaskbb/themes/aurora/src/assets/avatar80x80.png","target-app/flaskbb/themes/aurora/src/assets/favicon.ico","target-app/flaskbb/themes/aurora/src/scss/_button.scss","target-app/flaskbb/themes/aurora/src/scss/_category.scss","target-app/flaskbb/themes/aurora/src/scss/_forum.scss","target-app/flaskbb/themes/aurora/src/scss/_management.scss","target-app/flaskbb/themes/aurora/src/scss/_misc.scss","target-app/flaskbb/themes/aurora/src/scss/_navigation.scss","target-app/flaskbb/themes/aurora/src/scss/_page.scss","target-app/flaskbb/themes/aurora/src/scss/_profile.scss","target-app/flaskbb/themes/aurora/src/scss/_pygments.scss","target-app/flaskbb/themes/aurora/src/scss/_text.scss","target-app/flaskbb/themes/aurora/src/scss/_topic.scss","target-app/flaskbb/themes/aurora/src/scss/_variables.scss","target-app/flaskbb/themes/aurora/src/scss/styles.scss","target-app/flaskbb/themes/aurora/static/app.css","target-app/flaskbb/themes/aurora/static/app.css.map","target-app/flaskbb/themes/aurora/static/app.js","target-app/flaskbb/themes/aurora/static/app.js.map","target-app/flaskbb/themes/aurora/static/avatar.svg","target-app/flaskbb/themes/aurora/static/avatar100x100.png","target-app/flaskbb/themes/aurora/static/avatar150x150.png","target-app/flaskbb/themes/aurora/static/avatar400x400.png","target-app/flaskbb/themes/aurora/static/avatar80x80.png","target-app/flaskbb/themes/aurora/static/fa-regular-400.eot","target-app/flaskbb/themes/aurora/static/fa-regular-400.svg","target-app/flaskbb/themes/aurora/static/fa-regular-400.ttf","target-app/flaskbb/themes/aurora/static/fa-regular-400.woff","target-app/flaskbb/themes/aurora/static/fa-regular-400.woff2","target-app/flaskbb/themes/aurora/static/fa-solid-900.eot","target-app/flaskbb/themes/aurora/static/fa-solid-900.svg","target-app/flaskbb/themes/aurora/static/fa-solid-900.ttf","target-app/flaskbb/themes/aurora/static/fa-solid-900.woff","target-app/flaskbb/themes/aurora/static/fa-solid-900.woff2","target-app/flaskbb/themes/aurora/static/favicon.ico","target-app/flaskbb/themes/aurora/static/vendors.js","target-app/flaskbb/themes/aurora/static/vendors.js.LICENSE.txt","target-app/flaskbb/themes/aurora/static/vendors.js.map","target-app/flaskbb/themes/aurora/tsconfig.json","target-app/flaskbb/themes/aurora/webpack.common.js","target-app/flaskbb/themes/aurora/webpack.dev.js","target-app/flaskbb/themes/aurora/webpack.prod.js","target-app/flaskbb/tokens/__init__.py","target-app/flaskbb/tokens/serializer.py","target-app/flaskbb/tokens/verifiers.py","target-app/flaskbb/translations/da/LC_MESSAGES/messages.po","target-app/flaskbb/translations/de/LC_MESSAGES/messages.po","target-app/flaskbb/translations/en/LC_MESSAGES/messages.po","target-app/flaskbb/translations/es/LC_MESSAGES/messages.po","target-app/flaskbb/translations/fr/LC_MESSAGES/messages.po","target-app/flaskbb/translations/messages.pot","target-app/flaskbb/translations/nb_NO/LC_MESSAGES/messages.po","target-app/flaskbb/translations/pl/LC_MESSAGES/messages.po","target-app/flaskbb/translations/pt_BR/LC_MESSAGES/messages.po","target-app/flaskbb/translations/ru/LC_MESSAGES/messages.po","target-app/flaskbb/translations/sv_SE/LC_MESSAGES/messages.po","target-app/flaskbb/translations/uk/LC_MESSAGES/messages.po","target-app/flaskbb/translations/zh_CN/LC_MESSAGES/messages.po","target-app/flaskbb/translations/zh_TW/LC_MESSAGES/messages.po","target-app/flaskbb/user/__init__.py","target-app/flaskbb/user/forms.py","target-app/flaskbb/user/models.py","target-app/flaskbb/user/plugins.py","target-app/flaskbb/user/services/__init__.py","target-app/flaskbb/user/services/factories.py","target-app/flaskbb/user/services/update.py","target-app/flaskbb/user/services/validators.py","target-app/flaskbb/user/views.py","target-app/flaskbb/utils/__init__.py","target-app/flaskbb/utils/database.py","target-app/flaskbb/utils/datastructures.py","target-app/flaskbb/utils/fields.py","target-app/flaskbb/utils/forms.py","target-app/flaskbb/utils/helpers.py","target-app/flaskbb/utils/http.py","target-app/flaskbb/utils/populate.py","target-app/flaskbb/utils/requirements.py","target-app/flaskbb/utils/search.py","target-app/flaskbb/utils/settings.py","target-app/flaskbb/utils/translations.py","target-app/flaskbb/utils/views.py","target-app/requirements-dev.txt","target-app/requirements.txt","target-app/setup.cfg","target-app/setup.py","target-app/tox.ini","target-app/wsgi.py"]},"time":{"rules":[],"rules_parse_time":0.24008393287658691,"profiling_times":{"config_time":1.2390680313110352,"core_time":18.72111749649048,"ignores_time":0.00035691261291503906,"total_time":19.960867881774902},"parsing_time":{"total_time":2.4206390380859375,"per_file_time":{"mean":0.020171991984049478,"std_dev":0.007032015215867141},"very_slow_stats":{"time_ratio":0.7530701585045292,"count_ratio":0.03333333333333333},"very_slow_files":[{"fpath":"target-app/flaskbb/themes/aurora/src/app/emoji.js","ftime":0.34954190254211426},{"fpath":"target-app/flaskbb/themes/aurora/static/app.js","ftime":0.4449481964111328},{"fpath":"target-app/flaskbb/static/app.js","ftime":0.4542508125305176},{"fpath":"target-app/docs/_static/main.js","ftime":0.5741701126098633}]},"scanning_time":{"total_time":52.02674841880798,"per_file_time":{"mean":0.0996681004191724,"std_dev":1.1615877391542766},"very_slow_stats":{"time_ratio":0.8621738500484559,"count_ratio":0.011494252873563218},"very_slow_files":[{"fpath":"target-app/docs/_static/main.js","ftime":1.5641679763793945},{"fpath":"target-app/flaskbb/themes/aurora/src/app/emoji.js","ftime":1.987368106842041},{"fpath":"target-app/flaskbb/static/app.js","ftime":3.4864590167999268},{"fpath":"target-app/flaskbb/themes/aurora/static/app.js","ftime":3.9283249378204346},{"fpath":"target-app/flaskbb/themes/aurora/static/vendors.js","ftime":16.92924404144287},{"fpath":"target-app/flaskbb/static/vendors.js","ftime":16.960537910461426}]},"matching_time":{"total_time":10.41477108001709,"per_file_and_rule_time":{"mean":0.016744004951795968,"std_dev":0.035811640669471394},"very_slow_stats":{"time_ratio":0.8233760007047181,"count_ratio":0.008038585209003215},"very_slow_rules_on_files":[{"fpath":"target-app/docs/_static/main.js","rule_id":"javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression","time":0.3261709213256836},{"fpath":"target-app/docs/_static/main.js","rule_id":"javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","time":0.40906596183776855},{"fpath":"target-app/flaskbb/themes/aurora/src/app/emoji.js","rule_id":"javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","time":1.603287935256958},{"fpath":"target-app/flaskbb/static/app.js","rule_id":"javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","time":2.892887830734253},{"fpath":"target-app/flaskbb/themes/aurora/static/app.js","rule_id":"javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","time":3.343859910964966}]},"tainting_time":{"total_time":1.707793951034546,"per_def_and_rule_time":{"mean":0.0011984518954628396,"std_dev":0.00024225870930160305},"very_slow_stats":{"time_ratio":0.6698403338151142,"count_ratio":0.0035087719298245615},"very_slow_rules_on_defs":[{"fpath":"target-app/flaskbb/cli/main.py","fline":465,"rule_id":"python.boto3.security.hardcoded-token.hardcoded-token","time":0.10526013374328613},{"fpath":"target-app/docs/_static/main.js","fline":1,"rule_id":"javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression","time":0.1306900978088379},{"fpath":"target-app/flaskbb/migrations/201802282131_232e68a03aa2_change_emoji_shortcodes_to_characters.py","fline":1,"rule_id":"python.boto3.security.hardcoded-token.hardcoded-token","time":0.13496112823486328},{"fpath":"target-app/flaskbb/migrations/201802282131_232e68a03aa2_change_emoji_shortcodes_to_characters.py","fline":908,"rule_id":"python.boto3.security.hardcoded-token.hardcoded-token","time":0.38294100761413574},{"fpath":"target-app/flaskbb/migrations/201802282131_232e68a03aa2_change_emoji_shortcodes_to_characters.py","fline":914,"rule_id":"python.boto3.security.hardcoded-token.hardcoded-token","time":0.39009690284729004}]},"targets":[],"total_bytes":0,"max_memory_bytes":270108288},"engine_requested":"OSS","skipped_rules":[]}